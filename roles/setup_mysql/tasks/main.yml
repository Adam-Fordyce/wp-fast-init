---
# setup_mysql role

- name: Install required packages for python3-dev (1 of 3)
  ansible.builtin.apt:
    name: python3-dev
    state: latest

- name: Install required packages for python3-pip (2 of 3)
  ansible.builtin.apt:
    name: python3-pip
    state: latest

- name: Install required packages for MySQL-Python (3 of 3)
  ansible.builtin.apt:
    name: libmysqlclient-dev
    state: latest

- name: Install mysqlclient
  ansible.builtin.pip:
    name: mysqlclient

- name: Install mariadb-server
  ansible.builtin.apt:
    name: mariadb-server
    state: present

- name: Ensure mariadb is running and enabled
  ansible.builtin.service:
    name: mariadb
    state: started
    enabled: true

- name: Update mysql root password for all root accounts
  community.mysql.mysql_user:
    name: root
    host: "{{ host }}"
    password: "{{ mysql_root_password }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    check_implicit_admin: true
    priv: "*.*:ALL,GRANT"
  loop:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost
  loop_control:
    loop_var: host
    label: "Granting root access on {{ host }}"

# TODO: Add a task to write a my.cnf when logged in as the root user

- name: Delete anonymous MySQL user
  community.mysql.mysql_user:
    name: ""
    host: "{{ item }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    state: absent
  loop:
    - localhost
    - "{{ ansible_nodename }}"
  loop_control:
    loop_var: dbuser
    label: "Removing DB user {{ dbuser }}"


- name: Delete Hostname based MySQL user
  community.mysql.mysql_user:
    name: root
    host: "{{ ansible_nodename }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    state: absent

- name: Remove MySQL test database
  community.mysql.mysql_db:
    name: test
    login_user: root
    login_password: "{{ mysql_root_password }}"
    state: absent

...
