---

# TODO: Use artifacts to get a known version of this

- name: CLI - Get WP-CLI
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    dest: /usr/local/bin/wp
    mode: "0777"

- name: CLI - Get WP-CLI bash completion
  ansible.builtin.get_url:
    url: https://github.com/wp-cli/wp-cli/raw/master/utils/wp-completion.bash
    dest: /etc/bash_completion.d

- name: DB - Create Wordpress database
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: "{{ mysql_wordpress_database }}"
    state: present

- name: DB - Create user with all applicataion database privileges
  community.mysql.mysql_user:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: "{{ mysql_wordpress_username }}"
    password: "{{ mysql_wordpress_password }}"
    encrypted: false
    priv: '{{ mysql_wordpress_database }}.*:ALL'
    state: present

- name: APP - Create temporary build directory
  ansible.builtin.tempfile:
    state: directory
    suffix: build
  register: setup_wordpress_tempdir

- name: APP - Get latest Wordpress version
  ansible.builtin.get_url:
    url: https://wordpress.org/latest.tar.gz
    dest: "{{ setup_wordpress_tempdir.path }}/"
    owner: "{{ site_application_username }}"
    group: "{{ site_application_groupname }}"
  register: setup_wordpress_package

- name: Unpack the WordPress bundle
  ansible.builtin.unarchive:
    src: "{{ setup_wordpress_package.dest }}"
    dest: "{{ setup_wordpress_tempdir.path }}"
    remote_src: true
    owner: "{{ site_application_username }}"
    group: "{{ site_application_groupname }}"
    mode: "0755"

- name: APP - Copy the wordpress application to the public_html folder
  ansible.builtin.copy:
    src: "{{ setup_wordpress_tempdir.path }}/wordpress/"
    dest: "{{ wordpress_application_path }}/"
    remote_src: true
    directory_mode: true
    owner: "{{ site_application_username }}"
    group: "{{ site_application_groupname }}"
    mode: "0755"

- name: APP - Configure wp-config.php
  ansible.builtin.template:
    src: templates/wp-config.php.j2
    dest: "{{ wordpress_application_path }}/wp-config.php"
    owner: "{{ site_application_username }}"
    group: "{{ site_application_groupname }}"
    mode: "0640"
  vars:
    mysql_db: "{{ mysql_wordpress_database }}"
    mysql_user: "{{ mysql_wordpress_username }}"
    mysql_password: "{{ mysql_wordpress_password }}"
    mysql_host: "{{ mysql_database_host }}"
  notify: reload php

- name: APP - Remove tempdir
  ansible.builtin.file:
    path: "{{ setup_wordpress_tempdir.path }}"
    state: absent
  when: setup_wordpress_tempdir.path is defined

...
